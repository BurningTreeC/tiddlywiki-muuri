title: $:/plugins/BTC/Muuri/css
tags: $:/tags/Stylesheet

\define z-indexes()
\rules only
.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > [data-tiddler-title="$(cssEscapedTitle)$"].tc-tiddler-frame:not(.tc-muuri-dragging):not(.tc-muuri-positioning) {
	z-index: $(zIndex)$;
}
\end
\define set-muuri-tiddler-width(suffix)
.tc-story-river.tc-muuri-river > [data-tiddler-title="$(cssEscapedTitle)$"].tc-tiddler-frame {
	width: calc((100$suffix$ / <<columns>>) - <<margin>> - (<<margin>> / <<columns>>));
}
\end

.tc-muuri-dragging {
	z-index: 1;
}

.muuri-item-shown {
	position: absolute;
}

<$reveal state="$:/view" type="match" text="muuri">

<$vars count={{{ [{$:/config/muuri/storyview/columns}!match[]] ~[[1]] }}} margin={{$:/config/muuri/tiddler/margin}} marginSuffix={{{ [{$:/config/muuri/storyview/align-right}match[yes]addprefix[right]removesuffix[yes]] ~[[$:/config/muuri/storyview/align-right]is[missing]then[right]] ~[[left]] }}} sidebarBreakPoint={{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}} marginBottom={{$:/config/muuri/tiddler/margin-bottom}} storyHighZIndex={{{ [list[$:/StoryList]count[]add[201]] }}} firstBreakPoint={{$:/config/muuri/storyview/first-break-point}} secondBreakPoint={{$:/config/muuri/storyview/second-break-point}}>

.tc-story-river.tc-muuri-river.tc-sidebar-river {
	min-height: 250px;
	width: 100%;
}

.tc-story-river.tc-sidebar-river {
	margin-right: 0;
	border: 4px dashed <<colour foreground>>;
	border-radius: 4px;
}

.tc-story-river.tc-sidebar-river > .tc-tiddler-frame {
	margin-bottom: 0;
	width: 100%;
}

.tc-story-river.tc-sidebar-river > .tc-tiddler-frame:not(:last-child) {
	margin-bottom: 0.5em;
}

.tc-story-river.tc-sidebar-river > .tc-tiddler-frame {
	color: <<colour foreground>>;
}

.tc-story-river.tc-sidebar-river > .tc-tiddler-frame a.tc-tiddlylink {
	color: <<colour primary>>;
}

@media(min-width:<<sidebarBreakPoint>>) {

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) {
	min-height: calc(100vh - 2em);
}

.tc-story-river.tc-muuri-river > .tc-tiddler-frame {
	position: absolute;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
	width: calc((100% / <<count>>) - <<margin>> - (<<margin>> / <<count>>));
	margin-<<marginSuffix>>: <<margin>>;
	margin-bottom: <<marginBottom>>;
}

<$list filter="[list[$:/StoryList]has[muuri-tiddler-width]]">

	<$set name="columns" value={{{ [<currentTiddler>get[muuri-tiddler-width]] }}}>
	
		<$set name="cssEscapedTitle" value={{{ [<currentTiddler>escapecss[]] }}}>
		
			<<set-muuri-tiddler-width "%">>
		
		</$set>

	</$set>

</$list>

.tc-story-river.tc-muuri-river {
	margin-top: {{$:/config/muuri/storyview/story-river/margin-top}};
}

.tc-sidebar-scrollable {
	padding-left: calc(42px - <<margin>>);
}

<$reveal state="$:/config/muuri/storyview/columns" type="gt" text=<<firstBreakPoint>>>

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame .tc-tiddler-info {
	padding: 0;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame button.tc-fold-banner, .tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame button.tc-unfold-banner {
	margin-left: -29px;
}

<$reveal state="$:/config/muuri/storyview/columns" type="lt" text=<<secondBreakPoint>>>

.tc-page-container > .tc-tiddler-frame, .tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
	padding: 2em;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame .tc-tiddler-info {
	margin: 0 -2em 0 -2em;
}

</$reveal>

<$reveal state="$:/config/muuri/storyview/columns" type="gteq" text=<<secondBreakPoint>>>

.tc-page-container > .tc-tiddler-frame, .tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
	padding: 1em;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame .tc-tiddler-info {
	margin: 0 -1em 0 -1em;
}

.tc-page-container > .tc-tiddler-frame button.tc-fold-banner, .tc-page-container > .tc-tiddler-frame button.tc-unfold-banner, .tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame button.tc-fold-banner, .tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame button.tc-unfold-banner {
	margin-left: -15px;
}

.tc-page-container > .tc-tiddler-frame button.tc-unfold-banner, .tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame button.tc-unfold-banner {
	margin-top: -6px;
}

</$reveal>

</$reveal>

<$reveal state="$:/themes/tiddlywiki/vanilla/options/sidebarlayout" type="match" text="fixed-fluid">

.tc-sidebar-scrollable {
	left: calc({{$:/themes/tiddlywiki/vanilla/metrics/storyright}} + 42px);
}

	<$reveal state="$:/state/sidebar" type="nomatch" text="no">

			.tc-story-river.tc-muuri-river {
				width: {{$:/themes/tiddlywiki/vanilla/metrics/storywidth}};
			}

	</$reveal>

</$reveal>

	.tc-story-river.tc-muuri-river > .tc-tiddler-frame button.tc-fold-banner, .tc-story-river.tc-muuri-river > .tc-tiddler-frame button.tc-unfold-banner {
		z-index: -1;
	}

}

@media(max-width:<<sidebarBreakPoint>>) {

.tc-story-river.tc-muuri-river > .tc-tiddler-frame {
	position: absolute;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
	width: calc((100% / 2) - <<margin>> - (<<margin>> / 2));
	margin-<<marginSuffix>>: <<margin>>;
	margin-bottom: <<marginBottom>>;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame .tc-titlebar {
	font-size: 1.5em;
}

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame .tc-titlebar .tc-tiddler-controls .tc-drop-down {
	font-size: 1em;
}

.tc-story-river.tc-muuri-river {
	margin-top: {{$:/config/muuri/storyview/story-river/margin-top}};
}

.tc-story-river.tc-muuri-river > .tc-tiddler-frame .tc-tiddler-info {
	padding: 0;
}

<$reveal state="$:/state/sidebar" type="match" text="no">

.tc-sidebar-scrollable {
	display: none;
}

</$reveal>

	.tc-story-river.tc-muuri-river > .tc-tiddler-frame button.tc-fold-banner, .tc-story-river.tc-muuri-river > .tc-tiddler-frame button.tc-unfold-banner {
		z-index: -1;
	}

}

<$reveal state="$:/config/muuri/storyview/drag-enabled" type="match" text="yes">

	.tc-story-river.tc-muuri-river > .tc-tiddler-frame img {
		pointer-events: none;
	}

</$reveal>

<$reveal state="$:/config/muuri/storyview/fill-gaps" type="match" text="yes">

	@media (min-width: <<sidebarBreakPoint>>) {
		.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
			width: calc(100% / <<count>>);
		}
		
		.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) {
			margin-top: 0;
		}
	}
	
	@media (max-width: <<sidebarBreakPoint>>) {
		.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
			width: calc(100% / 2);
		}

		.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) {
			margin-top: 0;
		}
	}
	
	@media(min-width:<<sidebarBreakPoint>>) {
	
	.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
		border: none;
		border-radius: 0px;
		box-shadow: 1px 1px 1px <<colour tiddler-background>>;
		-webkit-box-shadow: 1px 1px 1px <<colour tiddler-background>>;
		-moz-box-shadow: 1px 1px 1px <<colour tiddler-background>>;
		margin-top: 0em;
		margin-left: 0em;
		margin-right: 0em;
		margin-bottom: 0em;
	}

}

	@media(max-width:<<sidebarBreakPoint>>) {
	
	.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
		border: none;
		border-radius: 0px;
		box-shadow: 1px 1px 1px <<colour tiddler-background>>;
		-webkit-box-shadow: 1px 1px 1px <<colour tiddler-background>>;
		-moz-box-shadow: 1px 1px 1px <<colour tiddler-background>>;
		margin-top: 0em;
		margin-left: 0em;
		margin-right: 0em;
		margin-bottom: 0em;
	}

}

</$reveal>

<$reveal state="$:/state/config/muuri/storyview/drag-enabled" type="match" text="no">

.tc-story-river.tc-muuri-river:not(.tc-sidebar-river) > .tc-tiddler-frame {
	touch-action: auto !important;
	user-select: auto !important;
	-ms-user-select: text !important;
	-moz-user-select: text !important;
	-webkit-user-select: text !important;
}

</$reveal>

<$list filter="[all[tiddlers]prefix[$:/state/popup/more-]limit[1]]">

.tc-story-river.tc-muuri-river > .tc-tiddler-frame .tc-tag-list-item {
	z-index: -1;
}

.tc-story-river.tc-muuri-river > .tc-tiddler-frame [data-grid="muuri"] {
	z-index: -1 !important;
}

</$list>

.tc-story-river.tc-muuri-river {
	padding: 0;
}

<$reveal state="$:/themes/tiddlywiki/vanilla/options/stickytitles" type="match" text="yes">

		/*
		position: sticky doesn't work well in the muuri view, it's disabled
		*/
	.tc-tiddler-title {
		position: initial;
		top: initial;
		background: initial;
	}

</$reveal>

	<$list filter="[list[$:/state/muuri/storyriver/z-indexes]]" variable="zIndexTiddler">

		<$set name="zIndex" value={{{[list[$:/state/muuri/storyriver/z-indexes]allafter<zIndexTiddler>] +[count[]] }}}>

			<$set name="cssEscapedTitle" value={{{ [<zIndexTiddler>escapecss[]] }}}>

				<<z-indexes>>

			</$set>

		</$set>

	</$list>

.tc-page-container > .tc-tiddler-frame.tc-muuri-dragging, .tc-page-container > .tc-tiddler-frame.tc-muuri-releasing, .tc-story-river.tc-muuri-river > .tc-tiddler-frame.tc-muuri-dragging, .tc-story-river.tc-muuri-river > .tc-tiddler-frame.tc-muuri-releasing {
	z-index: <<storyHighZIndex>>;
}

<$reveal state="$:/config/muuri/storyview/hide-titles-tags" type="match" text="yes">

.tc-story-river.tc-muuri-river > .tc-tiddler-frame .tc-titlebar, .tc-story-river.tc-muuri-river > .tc-tiddler-frame .tc-subtitle, .tc-story-river.tc-muuri-river > .tc-tiddler-frame .tc-tags-wrapper {
	display: none;
}

</$reveal>

</$reveal>

</$vars>

</$reveal>
